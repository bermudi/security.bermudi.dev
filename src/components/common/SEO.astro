---
interface Props {
  title: string;
  description: string;
  image?: string;
  type?: 'website' | 'article';
  publishedTime?: string;
  modifiedTime?: string;
  author?: string;
  section?: string;
}

const {
  title,
  description,
  image = '/og-image.webp',
  type = 'website',
  publishedTime,
  modifiedTime,
  author,
  section
} = Astro.props;

const siteUrl = import.meta.env.SITE || 'https://ciberdefensa.mx';
const imageUrl = image.startsWith('http') ? image : `${siteUrl}${image}`;
const siteName = 'CipherShield Security';
const locale = 'es_MX';
---

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Technical Meta Tags -->
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="generator" content={Astro.generator} />
<meta name="robots" content="index, follow" />
<meta name="theme-color" content="#0ea5e9" />
<link rel="canonical" href={new URL(Astro.url.pathname, siteUrl).toString()} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type} />
<meta property="og:url" content={siteUrl} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={imageUrl} />
<meta property="og:image:alt" content={title} />
<meta property="og:site_name" content={siteName} />
<meta property="og:locale" content={locale} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={siteUrl} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={imageUrl} />
<meta property="twitter:image:alt" content={title} />

<!-- Article Specific Meta Tags (only for articles) -->
{type === 'article' && publishedTime && (
  <meta property="article:published_time" content={publishedTime} />
)}
{type === 'article' && modifiedTime && (
  <meta property="article:modified_time" content={modifiedTime} />
)}
{type === 'article' && author && (
  <meta property="article:author" content={author} />
)}
{type === 'article' && section && (
  <meta property="article:section" content={section} />
)}

<!-- JSON-LD Structured Data -->
<script type="application/ld+json">
  {JSON.stringify({
    "@context": "https://schema.org",
    "@type": type === 'article' ? 'Article' : 'WebSite',
    "url": siteUrl,
    "name": title,
    "description": description,
    "image": imageUrl,
    ...( type === 'article' && {
      "author": {
        "@type": "Person",
        "name": author
      },
      "datePublished": publishedTime,
      "dateModified": modifiedTime || publishedTime
    }),
    "publisher": {
      "@type": "Organization",
      "name": siteName,
      "logo": {
        "@type": "ImageObject",
        "url": `${siteUrl}/logo.png`
      }
    }
  })}
</script>

<!-- Favicons -->
<link rel="icon" type="image/png" href="/favicon.png" />
<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
<link rel="manifest" href="/site.webmanifest" /> 